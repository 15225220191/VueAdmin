{"remainingRequest":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\src\\views\\login\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\src\\views\\login\\Register.vue","mtime":1567499873955},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst residences = [{\n    value: 'zhejiang',\n    label: 'Zhejiang',\n    children: [{\n        value: 'hangzhou',\n        label: 'Hangzhou',\n        children: [{\n            value: 'xihu',\n            label: 'West Lake',\n        }],\n    }],\n}, {\n    value: 'jiangsu',\n    label: 'Jiangsu',\n    children: [{\n        value: 'nanjing',\n        label: 'Nanjing',\n        children: [{\n            value: 'zhonghuamen',\n            label: 'Zhong Hua Men',\n        }],\n    }],\n}];\n\nexport default {\n    name: \"Register\",\n    data () {\n        return {\n            confirmDirty: false,\n            residences,\n            autoCompleteResult: [],\n            formItemLayout: {\n                labelCol: {\n                    xs: { span: 24 },\n                    sm: { span: 8 },\n                },\n                wrapperCol: {\n                    xs: { span: 24 },\n                    sm: { span: 16 },\n                },\n            },\n            tailFormItemLayout: {\n                wrapperCol: {\n                    xs: {\n                        span: 24,\n                        offset: 0,\n                    },\n                    sm: {\n                        span: 16,\n                        offset: 8,\n                    },\n                },\n            },\n        };\n    },\n    beforeCreate () {\n        this.form = this.$form.createForm(this);\n    },\n    methods: {\n        handleSubmit  (e) {\n            e.preventDefault();\n            this.form.validateFieldsAndScroll((err, values) => {\n                if (!err) {\n                    console.log('Received values of form: ', values);\n                }\n            });\n        },\n        handleConfirmBlur  (e) {\n            const value = e.target.value;\n            this.confirmDirty = this.confirmDirty || !!value;\n        },\n        compareToFirstPassword  (rule, value, callback) {\n            const form = this.form;\n            if (value && value !== form.getFieldValue('password')) {\n                callback('Two passwords that you enter is inconsistent!');\n            } else {\n                callback();\n            }\n        },\n        validateToNextPassword  (rule, value, callback) {\n            const form = this.form;\n            if (value && this.confirmDirty) {\n                form.validateFields(['confirm'], { force: true });\n            }\n            callback();\n        },\n        handleWebsiteChange  (value) {\n            let autoCompleteResult;\n            if (!value) {\n                autoCompleteResult = [];\n            } else {\n                autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n            }\n            this.autoCompleteResult = autoCompleteResult;\n        },\n    },\n};\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views/login","sourcesContent":["<template>\r\n    <div id=\"Register\">\r\n        <a-form :form=\"form\" @submit=\"handleSubmit\">\r\n            <a-form-item v-bind=\"formItemLayout\" label=\"E-mail\">\r\n                <a-input v-decorator=\"['email',{rules: [{type: 'email', message: 'The input is not valid E-mail!',}, {required: true, message: 'Please input your E-mail!',}]}]\"/>\r\n            </a-form-item>\r\n            <a-form-item v-bind=\"formItemLayout\" label=\"Password\">\r\n                <a-input v-decorator=\"['password',{rules: [{required: true, message: 'Please input your password!',}, {validator: validateToNextPassword,}],}]\" type=\"password\"/>\r\n            </a-form-item>\r\n            <a-form-item v-bind=\"formItemLayout\" label=\"Confirm Password\">\r\n                <a-input v-decorator=\"['confirm',{rules: [{required: true, message: 'Please confirm your password!',}, {validator: compareToFirstPassword,}],}]\" type=\"password\" @blur=\"handleConfirmBlur\"/>\r\n            </a-form-item>\r\n            <a-form-item v-bind=\"formItemLayout\">\r\n      <span slot=\"label\">\r\n        Nickname&nbsp;\r\n        <a-tooltip title=\"What do you want others to call you?\">\r\n          <a-icon type=\"question-circle-o\" />\r\n        </a-tooltip>\r\n      </span>\r\n                <a-input\r\n                        v-decorator=\"[\r\n          'nickname',\r\n          {\r\n            rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }]\r\n          }\r\n        ]\"\r\n                />\r\n            </a-form-item>\r\n            <a-form-item\r\n                    v-bind=\"formItemLayout\"\r\n                    label=\"Habitual Residence\"\r\n            >\r\n                <a-cascader\r\n                        v-decorator=\"[\r\n          'residence',\r\n          {\r\n            initialValue: ['zhejiang', 'hangzhou', 'xihu'],\r\n            rules: [{ type: 'array', required: true, message: 'Please select your habitual residence!' }],\r\n          }\r\n        ]\"\r\n                        :options=\"residences\"\r\n                />\r\n            </a-form-item>\r\n            <a-form-item\r\n                    v-bind=\"formItemLayout\"\r\n                    label=\"Phone Number\"\r\n            >\r\n                <a-input\r\n                        v-decorator=\"[\r\n          'phone',\r\n          {\r\n            rules: [{ required: true, message: 'Please input your phone number!' }],\r\n          }\r\n        ]\"\r\n                        style=\"width: 100%\"\r\n                >\r\n                    <a-select\r\n                            slot=\"addonBefore\"\r\n                            v-decorator=\"[\r\n            'prefix',\r\n            { initialValue: '86' }\r\n          ]\"\r\n                            style=\"width: 70px\"\r\n                    >\r\n                        <a-select-option value=\"86\">\r\n                            +86\r\n                        </a-select-option>\r\n                        <a-select-option value=\"87\">\r\n                            +87\r\n                        </a-select-option>\r\n                    </a-select>\r\n                </a-input>\r\n            </a-form-item>\r\n            <a-form-item\r\n                    v-bind=\"formItemLayout\"\r\n                    label=\"Website\"\r\n            >\r\n                <a-auto-complete\r\n                        v-decorator=\"[\r\n          'website',\r\n          {rules: [{ required: true, message: 'Please input website!' }]}\r\n        ]\"\r\n                        placeholder=\"website\"\r\n                        @change=\"handleWebsiteChange\"\r\n                >\r\n                    <template slot=\"dataSource\">\r\n                        <a-select-option\r\n                                v-for=\"website in autoCompleteResult\"\r\n                                :key=\"website\"\r\n                        >\r\n                            {{ website }}\r\n                        </a-select-option>\r\n                    </template>\r\n                    <a-input />\r\n                </a-auto-complete>\r\n            </a-form-item>\r\n            <a-form-item\r\n                    v-bind=\"formItemLayout\"\r\n                    label=\"Captcha\"\r\n                    extra=\"We must make sure that your are a human.\"\r\n            >\r\n                <a-row :gutter=\"8\">\r\n                    <a-col :span=\"12\">\r\n                        <a-input\r\n                                v-decorator=\"[\r\n              'captcha',\r\n              {rules: [{ required: true, message: 'Please input the captcha you got!' }]}\r\n            ]\"\r\n                        />\r\n                    </a-col>\r\n                    <a-col :span=\"12\">\r\n                        <a-button>Get captcha</a-button>\r\n                    </a-col>\r\n                </a-row>\r\n            </a-form-item>\r\n            <a-form-item v-bind=\"tailFormItemLayout\">\r\n                <a-checkbox\r\n                        v-decorator=\"['agreement', {valuePropName: 'checked'}]\"\r\n                >\r\n                    I have read the <a href=\"\">\r\n                    agreement\r\n                </a>\r\n                </a-checkbox>\r\n            </a-form-item>\r\n            <a-form-item v-bind=\"tailFormItemLayout\">\r\n                <a-button\r\n                        type=\"primary\"\r\n                        html-type=\"submit\"\r\n                >\r\n                    Register\r\n                </a-button>\r\n            </a-form-item>\r\n        </a-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    const residences = [{\r\n        value: 'zhejiang',\r\n        label: 'Zhejiang',\r\n        children: [{\r\n            value: 'hangzhou',\r\n            label: 'Hangzhou',\r\n            children: [{\r\n                value: 'xihu',\r\n                label: 'West Lake',\r\n            }],\r\n        }],\r\n    }, {\r\n        value: 'jiangsu',\r\n        label: 'Jiangsu',\r\n        children: [{\r\n            value: 'nanjing',\r\n            label: 'Nanjing',\r\n            children: [{\r\n                value: 'zhonghuamen',\r\n                label: 'Zhong Hua Men',\r\n            }],\r\n        }],\r\n    }];\r\n\r\n    export default {\r\n        name: \"Register\",\r\n        data () {\r\n            return {\r\n                confirmDirty: false,\r\n                residences,\r\n                autoCompleteResult: [],\r\n                formItemLayout: {\r\n                    labelCol: {\r\n                        xs: { span: 24 },\r\n                        sm: { span: 8 },\r\n                    },\r\n                    wrapperCol: {\r\n                        xs: { span: 24 },\r\n                        sm: { span: 16 },\r\n                    },\r\n                },\r\n                tailFormItemLayout: {\r\n                    wrapperCol: {\r\n                        xs: {\r\n                            span: 24,\r\n                            offset: 0,\r\n                        },\r\n                        sm: {\r\n                            span: 16,\r\n                            offset: 8,\r\n                        },\r\n                    },\r\n                },\r\n            };\r\n        },\r\n        beforeCreate () {\r\n            this.form = this.$form.createForm(this);\r\n        },\r\n        methods: {\r\n            handleSubmit  (e) {\r\n                e.preventDefault();\r\n                this.form.validateFieldsAndScroll((err, values) => {\r\n                    if (!err) {\r\n                        console.log('Received values of form: ', values);\r\n                    }\r\n                });\r\n            },\r\n            handleConfirmBlur  (e) {\r\n                const value = e.target.value;\r\n                this.confirmDirty = this.confirmDirty || !!value;\r\n            },\r\n            compareToFirstPassword  (rule, value, callback) {\r\n                const form = this.form;\r\n                if (value && value !== form.getFieldValue('password')) {\r\n                    callback('Two passwords that you enter is inconsistent!');\r\n                } else {\r\n                    callback();\r\n                }\r\n            },\r\n            validateToNextPassword  (rule, value, callback) {\r\n                const form = this.form;\r\n                if (value && this.confirmDirty) {\r\n                    form.validateFields(['confirm'], { force: true });\r\n                }\r\n                callback();\r\n            },\r\n            handleWebsiteChange  (value) {\r\n                let autoCompleteResult;\r\n                if (!value) {\r\n                    autoCompleteResult = [];\r\n                } else {\r\n                    autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n                }\r\n                this.autoCompleteResult = autoCompleteResult;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}