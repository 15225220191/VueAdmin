{"remainingRequest":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\src\\views\\authority\\GroupAdd.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\src\\views\\authority\\GroupAdd.vue","mtime":1569051559714},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {AddGroup, SaveGroup} from \"../../axios/api\";\n\nexport default {\n    data() {\n        return {\n            form: this.$form.createForm(this),\n            treeData: [],\n            checkValue: [],\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 5},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 12},\n            },\n        };\n    },\n    mounted() {\n        this.fetch()\n    },\n    methods: {\n        fetch() {\n            AddGroup().then((response) => {\n                if (response.data.code === 1) {\n                    var rule_list = response.data.data;\n                    for (var i = 0; i < rule_list.length; i++) {\n                        rule_list[i].key = rule_list[i].id.toString();\n                        if (rule_list[i]['children'].length != 0) {\n                            for (var j = 0; j < rule_list[i]['children'].length; j++) {\n                                rule_list[i]['children'][j]['key'] = rule_list[i]['children'][j]['id'].toString();\n                                if (rule_list[i]['children'][j]['children'] && rule_list[i]['children'][j]['children'].length != 0) {\n                                    for (var a = 0; a < rule_list[i]['children'][j]['children'].length; a++) {\n                                        rule_list[i]['children'][j]['children'][a]['key'] = rule_list[i]['children'][j]['children'][a]['id'].toString();\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.treeData = rule_list;\n                } else {\n                    this.$message.error(response.data.msg, 2);\n                }\n            })\n        },\n        onCheck(checkedKeys, info) {\n            console.log('onCheck', checkedKeys, info)\n        },\n        handleSubmit(e) {\n            e.preventDefault();\n            this.form.validateFields((errors, values) => {\n                if (errors) {\n                    console.log(errors);\n                } else {\n                    this.postSubmit(values);\n                }\n            })\n        },\n        resetFields() {\n            this.form.resetFields()\n        },\n        postSubmit(param) {\n            param.rules = this.checkValue;\n            if (param.status === false) {\n                param.status = 0;\n            } else {\n                param.status = 1;\n            }\n            console.log(param);\n            SaveGroup(param).then((res) => {\n                if (res.data.code == 1) {\n                    this.$message.success(res.data.msg, 2);\n                } else {\n                    this.$message.error(res.data.msg, 2);\n                }\n            }).catch((error) => {\n                console.log(error);\n            })\n        },\n        checkvalue(a, b) {\n            this.checkValue = a;\n        }\n    }\n};\n",{"version":3,"sources":["GroupAdd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GroupAdd.vue","sourceRoot":"src/views/authority","sourcesContent":["<template>\r\n    <a-form :form=\"form\" @submit=\"handleSubmit\">\r\n        <a-tag color=\"#108ee9\">新增角色</a-tag>\r\n        <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"角色名称\">\r\n            <a-input v-decorator=\"['title',{rules: [{ required: true, message: '请填写角色名称' }]}]\" placeholder=\"请填写角色名称\"/>\r\n        </a-form-item>\r\n        <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"角色状态\">\r\n            <a-switch defaultChecked v-decorator=\"['status',{initialValue:true}]\"/>\r\n        </a-form-item>\r\n        <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"角色描述\">\r\n            <a-textarea :autosize=\"{ minRows: 2, maxRows: 6 }\" v-decorator=\"['note']\"/>\r\n        </a-form-item>\r\n        <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\" label=\"权限选择\">\r\n            <a-tree\r\n                    checkable\r\n                    :treeData=\"treeData\"\r\n                    v-decorator=\"['rules']\"\r\n                    @check=\"checkvalue\"\r\n            />\r\n        </a-form-item>\r\n        <a-form-item :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\">\r\n            <div>\r\n                <a-button type=\"primary\" html-type=\"submit\" class=\"login-form-button\" style=\"margin-right: 5%;\">\r\n                    保存\r\n                </a-button>\r\n\r\n                <a-button type=\"danger\" class=\"login-form-button\" @click=\"resetFields\">\r\n                    重置\r\n                </a-button>\r\n            </div>\r\n        </a-form-item>\r\n    </a-form>\r\n</template>\r\n<script>\r\n    import {AddGroup, SaveGroup} from \"../../axios/api\";\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                form: this.$form.createForm(this),\r\n                treeData: [],\r\n                checkValue: [],\r\n                labelCol: {\r\n                    xs: {span: 24},\r\n                    sm: {span: 5},\r\n                },\r\n                wrapperCol: {\r\n                    xs: {span: 24},\r\n                    sm: {span: 12},\r\n                },\r\n            };\r\n        },\r\n        mounted() {\r\n            this.fetch()\r\n        },\r\n        methods: {\r\n            fetch() {\r\n                AddGroup().then((response) => {\r\n                    if (response.data.code === 1) {\r\n                        var rule_list = response.data.data;\r\n                        for (var i = 0; i < rule_list.length; i++) {\r\n                            rule_list[i].key = rule_list[i].id.toString();\r\n                            if (rule_list[i]['children'].length != 0) {\r\n                                for (var j = 0; j < rule_list[i]['children'].length; j++) {\r\n                                    rule_list[i]['children'][j]['key'] = rule_list[i]['children'][j]['id'].toString();\r\n                                    if (rule_list[i]['children'][j]['children'] && rule_list[i]['children'][j]['children'].length != 0) {\r\n                                        for (var a = 0; a < rule_list[i]['children'][j]['children'].length; a++) {\r\n                                            rule_list[i]['children'][j]['children'][a]['key'] = rule_list[i]['children'][j]['children'][a]['id'].toString();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        this.treeData = rule_list;\r\n                    } else {\r\n                        this.$message.error(response.data.msg, 2);\r\n                    }\r\n                })\r\n            },\r\n            onCheck(checkedKeys, info) {\r\n                console.log('onCheck', checkedKeys, info)\r\n            },\r\n            handleSubmit(e) {\r\n                e.preventDefault();\r\n                this.form.validateFields((errors, values) => {\r\n                    if (errors) {\r\n                        console.log(errors);\r\n                    } else {\r\n                        this.postSubmit(values);\r\n                    }\r\n                })\r\n            },\r\n            resetFields() {\r\n                this.form.resetFields()\r\n            },\r\n            postSubmit(param) {\r\n                param.rules = this.checkValue;\r\n                if (param.status === false) {\r\n                    param.status = 0;\r\n                } else {\r\n                    param.status = 1;\r\n                }\r\n                console.log(param);\r\n                SaveGroup(param).then((res) => {\r\n                    if (res.data.code == 1) {\r\n                        this.$message.success(res.data.msg, 2);\r\n                    } else {\r\n                        this.$message.error(res.data.msg, 2);\r\n                    }\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            checkvalue(a, b) {\r\n                this.checkValue = a;\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}