{"remainingRequest":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\src\\views\\authority\\Administrator.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\src\\views\\authority\\Administrator.vue","mtime":1569051728259},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {AdministratorLock, DeleteAdministrator, GetAdministrator} from \"../../axios/api\";\n\nconst columns = [{\n    title: 'ID',\n    dataIndex: 'admin_uid',\n    sorter: true,\n    scopedSlots: {customRender: 'admin_uid'},\n}, {\n    title: '用户名',\n    dataIndex: 'username',\n}, {\n    title: '所属权限组',\n    dataIndex: 'group_title',\n}, {\n    title: '性别',\n    dataIndex: 'sex',\n    filters: [\n        {text: '男', value: '1'},\n        {text: '女', value: '2'},\n        {text: '保密', value: '0'},\n    ]\n}, {\n    title: '出生年月',\n    dataIndex: 'birthday',\n}, {\n    title: '电话',\n    dataIndex: 'phone',\n}, {\n    title: 'QQ',\n    dataIndex: 'qq',\n}, {\n    title: '邮箱',\n    dataIndex: 'email',\n}, {\n    title: '状态',\n    dataIndex: 'status',\n    customRender: (text, record, index) => {\n        if (text === 1) {\n            return '正常'\n        } else {\n            return '锁定'\n        }\n    }\n}, {\n    title: '创建时间',\n    dataIndex: 'create_time',\n}, {\n    title: '操作描述',\n    dataIndex: '',\n    scopedSlots: {customRender: 'operation'},\n}];\n\nexport default {\n    mounted() {\n        this.fetch();\n    },\n    data() {\n        return {\n            data: [],\n            pagination: {},\n            loading: false,\n            columns,\n        }\n    },\n    methods: {\n        handleTableChange(pagination, filters, sorter) {\n            const pager = {pagination};\n            pager.current = pagination.current;\n            this.pagination = pager;\n            this.fetch({\n                sex: filters.sex[0],\n                results: pagination.pageSize,\n                page: pagination.current,\n                sortField: sorter.field,\n                sortOrder: sorter.order,\n            });\n        },\n        onDelete(key) {\n            DeleteAdministrator({\n                uid: key\n            }).then((response) => {\n                if (response.data.code === 1) {\n                    this.$message.success(response.data.msg, 2);\n                } else {\n                    this.$message.error(response.data.msg, 2);\n                }\n            })\n        },\n        fetch(params = {}) {\n            params.results = 10;\n            this.loading = true;\n            GetAdministrator(params).then((response) => {\n                var list = response.data.data.list;\n                var auth_group = response.data.data.auth_group;\n                var sex = response.data.data.sex;\n                for (var i = 0; i < list.data.length; i++) {\n                    list.data[i]['sex'] = sex[list.data[i]['sex']]\n                    list.data[i]['group_title'] = auth_group[list.data[i]['group_id']]\n                }\n                const pagination = this.pagination;\n                pagination.total = list.total;\n                this.loading = false;\n                this.data = list.data;\n                this.pagination = pagination;\n            });\n        },\n        dispark(uid, opt) {\n            this.loading = true;\n            AdministratorLock({\n                'uid': uid,\n                'opt': opt,\n            }).then((response) => {\n                if (response.data.code === 1) {\n                    this.$message.success(response.data.msg, 2);\n                } else {\n                    this.$message.error(response.data.msg, 2);\n                }\n            });\n            this.loading = false;\n        }\n    },\n}\n",{"version":3,"sources":["Administrator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Administrator.vue","sourceRoot":"src/views/authority","sourcesContent":["<template>\r\n    <a-table :columns=\"columns\"\r\n             :rowKey=\"record => record.admin_uid\"\r\n             :dataSource=\"data\"\r\n             :pagination=\"pagination\"\r\n             :loading=\"loading\"\r\n             @change=\"handleTableChange\"\r\n    >\r\n        <template slot=\"name\" slot-scope=\"name\">\r\n            {{name.first}} {{name.last}}\r\n        </template>\r\n        <template slot=\"operation\" slot-scope=\"text, record\">\r\n            <a-popconfirm v-if=\"record.group_id != 1\" title=\"Sure to delete?\"\r\n                          @confirm=\"() => onDelete(record.admin_uid)\">\r\n                <a href=\"javascript:;\">Delete</a>\r\n            </a-popconfirm>\r\n\r\n            <a-divider v-if=\"record.group_id != 1\" type=\"vertical\"/>\r\n\r\n            <a-popconfirm v-if=\"record.status == 0 && record.group_id != 1\" title=\"您确定要解除锁定?\"\r\n                          @confirm=\"() => dispark(record.admin_uid,'')\">\r\n                <a href=\"javascript:;\">解除锁定</a>\r\n            </a-popconfirm>\r\n            <a-popconfirm v-if=\"record.status != 0 && record.group_id != 1\" title=\"您确定要锁定禁用?\"\r\n                          @confirm=\"() => dispark(record.admin_uid,'lock')\">\r\n                <a href=\"javascript:;\">锁定禁用</a>\r\n            </a-popconfirm>\r\n\r\n            <a-divider v-if=\"record.group_id != 1\" type=\"vertical\"/>\r\n\r\n            <router-link :to=\"{path: '/Administrator/edit', query: {uid:record.admin_uid}}\">Edit</router-link>\r\n        </template>\r\n    </a-table>\r\n</template>\r\n<script>\r\n    import {AdministratorLock, DeleteAdministrator, GetAdministrator} from \"../../axios/api\";\r\n\r\n    const columns = [{\r\n        title: 'ID',\r\n        dataIndex: 'admin_uid',\r\n        sorter: true,\r\n        scopedSlots: {customRender: 'admin_uid'},\r\n    }, {\r\n        title: '用户名',\r\n        dataIndex: 'username',\r\n    }, {\r\n        title: '所属权限组',\r\n        dataIndex: 'group_title',\r\n    }, {\r\n        title: '性别',\r\n        dataIndex: 'sex',\r\n        filters: [\r\n            {text: '男', value: '1'},\r\n            {text: '女', value: '2'},\r\n            {text: '保密', value: '0'},\r\n        ]\r\n    }, {\r\n        title: '出生年月',\r\n        dataIndex: 'birthday',\r\n    }, {\r\n        title: '电话',\r\n        dataIndex: 'phone',\r\n    }, {\r\n        title: 'QQ',\r\n        dataIndex: 'qq',\r\n    }, {\r\n        title: '邮箱',\r\n        dataIndex: 'email',\r\n    }, {\r\n        title: '状态',\r\n        dataIndex: 'status',\r\n        customRender: (text, record, index) => {\r\n            if (text === 1) {\r\n                return '正常'\r\n            } else {\r\n                return '锁定'\r\n            }\r\n        }\r\n    }, {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n    }, {\r\n        title: '操作描述',\r\n        dataIndex: '',\r\n        scopedSlots: {customRender: 'operation'},\r\n    }];\r\n\r\n    export default {\r\n        mounted() {\r\n            this.fetch();\r\n        },\r\n        data() {\r\n            return {\r\n                data: [],\r\n                pagination: {},\r\n                loading: false,\r\n                columns,\r\n            }\r\n        },\r\n        methods: {\r\n            handleTableChange(pagination, filters, sorter) {\r\n                const pager = {pagination};\r\n                pager.current = pagination.current;\r\n                this.pagination = pager;\r\n                this.fetch({\r\n                    sex: filters.sex[0],\r\n                    results: pagination.pageSize,\r\n                    page: pagination.current,\r\n                    sortField: sorter.field,\r\n                    sortOrder: sorter.order,\r\n                });\r\n            },\r\n            onDelete(key) {\r\n                DeleteAdministrator({\r\n                    uid: key\r\n                }).then((response) => {\r\n                    if (response.data.code === 1) {\r\n                        this.$message.success(response.data.msg, 2);\r\n                    } else {\r\n                        this.$message.error(response.data.msg, 2);\r\n                    }\r\n                })\r\n            },\r\n            fetch(params = {}) {\r\n                params.results = 10;\r\n                this.loading = true;\r\n                GetAdministrator(params).then((response) => {\r\n                    var list = response.data.data.list;\r\n                    var auth_group = response.data.data.auth_group;\r\n                    var sex = response.data.data.sex;\r\n                    for (var i = 0; i < list.data.length; i++) {\r\n                        list.data[i]['sex'] = sex[list.data[i]['sex']]\r\n                        list.data[i]['group_title'] = auth_group[list.data[i]['group_id']]\r\n                    }\r\n                    const pagination = this.pagination;\r\n                    pagination.total = list.total;\r\n                    this.loading = false;\r\n                    this.data = list.data;\r\n                    this.pagination = pagination;\r\n                });\r\n            },\r\n            dispark(uid, opt) {\r\n                this.loading = true;\r\n                AdministratorLock({\r\n                    'uid': uid,\r\n                    'opt': opt,\r\n                }).then((response) => {\r\n                    if (response.data.code === 1) {\r\n                        this.$message.success(response.data.msg, 2);\r\n                    } else {\r\n                        this.$message.error(response.data.msg, 2);\r\n                    }\r\n                });\r\n                this.loading = false;\r\n            }\r\n        },\r\n    }\r\n</script>\r\n"]}]}