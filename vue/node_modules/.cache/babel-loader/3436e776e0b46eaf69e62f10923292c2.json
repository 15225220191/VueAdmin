{"remainingRequest":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin_1\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin_1\\vue\\src\\axios\\request.js","dependencies":[{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin_1\\vue\\src\\axios\\request.js","mtime":1570496599246},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin_1\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin_1\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\VueAdmin_1\\\\vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nvar service = axios.create({\n  // baseURL: \"http://sso.shuang.zhihuawei.cn/php/public\", // api的base_url\n  baseURL: \"http://www.vueadmin.io\",\n  // api的base_url\n  // timeout: 5000, //请求超时时间\n  headers: {},\n  withCredentials: false,\n  // `withCredentials` 表示跨域请求时是否需要使用凭证,默认 false\n  responseType: 'json' // `responseType` 表示服务器响应的数据类型，可以是 'arraybuffer', 'blob', 'document', 'json', 'text', 'stream',默认 json\n\n}); // 请求拦截器\n\nservice.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  if (config.method == 'post') {\n    config.data = _objectSpread({}, config.data);\n  } else if (config.method == 'get') {\n    config.params = _objectSpread({}, config.params);\n  }\n\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n}); // 响应拦截器\n\nservice.interceptors.response.use(function (response) {\n  // 对响应数据做点什么\n  return response;\n}, function (error) {\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\nexport default service;",{"version":3,"sources":["D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin_1\\vue\\src\\axios\\request.js"],"names":["axios","service","create","baseURL","headers","withCredentials","responseType","interceptors","request","use","config","method","data","params","error","Promise","reject","response"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AACzB;AACAC,EAAAA,OAAO,EAAE,wBAFgB;AAEU;AACnC;AACAC,EAAAA,OAAO,EAAE,EAJgB;AAKzBC,EAAAA,eAAe,EAAE,KALQ;AAKD;AACxBC,EAAAA,YAAY,EAAE,MANW,CAMH;;AANG,CAAb,CAAhB,C,CASA;;AACAL,OAAO,CAACM,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAUC,MAAV,EAAkB;AAC/C;AACA,MAAGA,MAAM,CAACC,MAAP,IAAe,MAAlB,EAAyB;AACrBD,IAAAA,MAAM,CAACE,IAAP,qBACOF,MAAM,CAACE,IADd;AAGH,GAJD,MAIM,IAAGF,MAAM,CAACC,MAAP,IAAe,KAAlB,EAAwB;AAC1BD,IAAAA,MAAM,CAACG,MAAP,qBACOH,MAAM,CAACG,MADd;AAGH;;AACD,SAAOH,MAAP;AACH,CAZD,EAYG,UAAUI,KAAV,EAAiB;AAChB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAfD,E,CAiBA;;AACAb,OAAO,CAACM,YAAR,CAAqBU,QAArB,CAA8BR,GAA9B,CAAkC,UAAUQ,QAAV,EAAoB;AAClD;AACA,SAAOA,QAAP;AACH,CAHD,EAGG,UAAUH,KAAV,EAAiB;AAChB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAND;AAQA,eAAeb,OAAf","sourcesContent":["import axios from 'axios';\r\nconst service = axios.create({\r\n    // baseURL: \"http://sso.shuang.zhihuawei.cn/php/public\", // api的base_url\r\n    baseURL: \"http://www.vueadmin.io\", // api的base_url\r\n    // timeout: 5000, //请求超时时间\r\n    headers: {},\r\n    withCredentials: false, // `withCredentials` 表示跨域请求时是否需要使用凭证,默认 false\r\n    responseType: 'json', // `responseType` 表示服务器响应的数据类型，可以是 'arraybuffer', 'blob', 'document', 'json', 'text', 'stream',默认 json\r\n});\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(function (config) {\r\n    // 在发送请求之前做些什么\r\n    if(config.method=='post'){\r\n        config.data = {\r\n            ...config.data,\r\n        }\r\n    }else if(config.method=='get'){\r\n        config.params = {\r\n            ...config.params\r\n        }\r\n    }\r\n    return config;\r\n}, function (error) {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error);\r\n});\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(function (response) {\r\n    // 对响应数据做点什么\r\n    return response\r\n}, function (error) {\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default service;"]}]}