{"remainingRequest":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\src\\views\\index\\Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\src\\views\\index\\Table.vue","mtime":1569057310161},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\VueAdmin\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\VueAdmin\\\\vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Console } from \"../../axios/api\";\nimport moment from \"moment\";\nvar columns = [{\n  title: 'ID',\n  dataIndex: 'log_id',\n  sorter: true,\n  width: '20%',\n  scopedSlots: {\n    customRender: 'log_id'\n  }\n}, {\n  title: '操作管理员',\n  dataIndex: 'username',\n  width: '20%'\n}, {\n  title: '操作时间',\n  dataIndex: 'create_time',\n  customRender: function customRender(text, record, index) {\n    return moment(text * 1000).format('YYYY-MM-DD HH:mm:ss');\n  }\n}, {\n  title: 'IP',\n  dataIndex: 'ip'\n}, {\n  title: '操作描述',\n  dataIndex: 'log_note'\n}];\nvar describe = {\n  filterConfirm: '确定',\n  filterReset: '重置',\n  emptyText: '暂无数据'\n};\nexport default {\n  mounted: function mounted() {\n    this.fetch();\n  },\n  data: function data() {\n    return {\n      data: [],\n      pagination: {},\n      loading: false,\n      columns: columns,\n      describe: describe,\n      moment: moment\n    };\n  },\n  methods: {\n    handleTableChange: function handleTableChange(pagination, filters, sorter) {\n      var pager = _objectSpread({}, this.pagination);\n\n      pager.current = pagination.current;\n      this.pagination = pager;\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order\n      });\n    },\n    fetch: function fetch() {\n      var _this = this;\n\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.loading = true;\n      Console({\n        results: params.results,\n        page: params.page,\n        sortField: params.sortField,\n        sortOrder: params.sortOrder\n      }).then(function (data) {\n        var pagination = _objectSpread({}, _this.pagination); // Read total count from server\n        // pagination.total = data.totalCount;\n\n\n        pagination.total = data.data.log_list.total;\n        _this.loading = false;\n        _this.data = data.data.log_list.data;\n        _this.pagination = pagination;\n      });\n    }\n  }\n};",{"version":3,"sources":["Table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAeA,SAAA,OAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,IAAA,OAAA,GAAA,CAAA;AACA,EAAA,KAAA,EAAA,IADA;AAEA,EAAA,SAAA,EAAA,QAFA;AAGA,EAAA,MAAA,EAAA,IAHA;AAIA,EAAA,KAAA,EAAA,KAJA;AAKA,EAAA,WAAA,EAAA;AAAA,IAAA,YAAA,EAAA;AAAA;AALA,CAAA,EAMA;AACA,EAAA,KAAA,EAAA,OADA;AAEA,EAAA,SAAA,EAAA,UAFA;AAGA,EAAA,KAAA,EAAA;AAHA,CANA,EAUA;AACA,EAAA,KAAA,EAAA,MADA;AAEA,EAAA,SAAA,EAAA,aAFA;AAGA,EAAA,YAAA,EAAA,sBAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA;AACA,WAAA,MAAA,CAAA,IAAA,GAAA,IAAA,CAAA,CAAA,MAAA,CAAA,qBAAA,CAAA;AACA;AALA,CAVA,EAgBA;AACA,EAAA,KAAA,EAAA,IADA;AAEA,EAAA,SAAA,EAAA;AAFA,CAhBA,EAmBA;AACA,EAAA,KAAA,EAAA,MADA;AAEA,EAAA,SAAA,EAAA;AAFA,CAnBA,CAAA;AAuBA,IAAA,QAAA,GAAA;AACA,EAAA,aAAA,EAAA,IADA;AAEA,EAAA,WAAA,EAAA,IAFA;AAGA,EAAA,SAAA,EAAA;AAHA,CAAA;AAKA,eAAA;AACA,EAAA,OADA,qBACA;AACA,SAAA,KAAA;AACA,GAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,KAHA;AAIA,MAAA,OAAA,EAAA,OAJA;AAKA,MAAA,QAAA,EAAA,QALA;AAMA,MAAA,MAAA,EAAA;AANA,KAAA;AAQA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,UADA,EACA,OADA,EACA,MADA,EACA;AACA,UAAA,KAAA,qBAAA,KAAA,UAAA,CAAA;;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,UAAA,CAAA,OAAA;AACA,WAAA,UAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA;AACA,QAAA,OAAA,EAAA,UAAA,CAAA,QADA;AAEA,QAAA,IAAA,EAAA,UAAA,CAAA,OAFA;AAGA,QAAA,SAAA,EAAA,MAAA,CAAA,KAHA;AAIA,QAAA,SAAA,EAAA,MAAA,CAAA;AAJA,OAAA;AAMA,KAXA;AAYA,IAAA,KAZA,mBAYA;AAAA;;AAAA,UAAA,MAAA,uEAAA,EAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,MAAA,CAAA,OADA;AAEA,QAAA,IAAA,EAAA,MAAA,CAAA,IAFA;AAGA,QAAA,SAAA,EAAA,MAAA,CAAA,SAHA;AAIA,QAAA,SAAA,EAAA,MAAA,CAAA;AAJA,OAAA,CAAA,CAKA,IALA,CAKA,UAAA,IAAA,EAAA;AACA,YAAA,UAAA,qBAAA,KAAA,CAAA,UAAA,CAAA,CADA,CAEA;AACA;;;AACA,QAAA,UAAA,CAAA,KAAA,GAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,UAAA,GAAA,UAAA;AACA,OAbA;AAcA;AA5BA;AAdA,CAAA","sourcesContent":["<template>\r\n    <a-table\r\n            :columns=\"columns\"\r\n            :rowKey=\"record => record.log_id\"\r\n            :dataSource=\"data\"\r\n            :pagination=\"pagination\"\r\n            :loading=\"loading\"\r\n            :locale = \"describe\"\r\n            @change=\"handleTableChange\">\r\n        <template slot=\"name\" slot-scope=\"name\">\r\n            {{name.first}} {{name.last}}\r\n        </template>\r\n    </a-table>\r\n</template>\r\n<script>\r\n    import {Console} from \"../../axios/api\";\r\n    import moment from \"moment\";\r\n    const columns = [{\r\n        title: 'ID',\r\n        dataIndex: 'log_id',\r\n        sorter: true,\r\n        width: '20%',\r\n        scopedSlots: { customRender: 'log_id' },\r\n    }, {\r\n        title: '操作管理员',\r\n        dataIndex: 'username',\r\n        width: '20%',\r\n    }, {\r\n        title: '操作时间',\r\n        dataIndex: 'create_time',\r\n        customRender: (text, record, index) => {\r\n            return moment(text * 1000).format('YYYY-MM-DD HH:mm:ss');\r\n        }\r\n    }, {\r\n        title: 'IP',\r\n        dataIndex: 'ip',\r\n    }, {\r\n        title: '操作描述',\r\n        dataIndex: 'log_note',\r\n    }];\r\n    const describe = {\r\n        filterConfirm: '确定',\r\n        filterReset: '重置',\r\n        emptyText: '暂无数据'\r\n    };\r\n    export default {\r\n        mounted() {\r\n            this.fetch();\r\n        },\r\n        data() {\r\n            return {\r\n                data: [],\r\n                pagination: {},\r\n                loading: false,\r\n                columns,\r\n                describe,\r\n                moment,\r\n            }\r\n        },\r\n        methods: {\r\n            handleTableChange (pagination, filters, sorter) {\r\n                const pager = { ...this.pagination };\r\n                pager.current = pagination.current;\r\n                this.pagination = pager;\r\n                this.fetch({\r\n                    results: pagination.pageSize,\r\n                    page: pagination.current,\r\n                    sortField: sorter.field,\r\n                    sortOrder: sorter.order,\r\n                });\r\n            },\r\n            fetch (params = {}) {\r\n                this.loading = true;\r\n                Console({\r\n                        results: params.results,\r\n                        page:params.page,\r\n                        sortField:params.sortField,\r\n                        sortOrder:params.sortOrder\r\n                    }).then((data) => {\r\n                    const pagination = { ...this.pagination };\r\n                    // Read total count from server\r\n                    // pagination.total = data.totalCount;\r\n                    pagination.total = data.data.log_list.total;\r\n                    this.loading = false;\r\n                    this.data = data.data.log_list.data;\r\n                    this.pagination = pagination;\r\n                });\r\n            }\r\n        },\r\n    }\r\n</script>\r\n"],"sourceRoot":"src/views/index"}]}